/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUICatalogacion.java
 *
 * Created on 7/05/2011, 03:59:19 PM
 */
package biblioteca.gui;

import biblioteca.database2.beans.Documento;
import biblioteca.database2.controladores.ControladorDocumento;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.File;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author alejandro
 */
public class GUICatalogacion extends javax.swing.JFrame {
    static Documento documento;
    static public boolean Informacion_Basica_Guardada;
    static public boolean Autores_Guardado;
    static public boolean Areas_Guardadas;
    static public boolean Palabras_Clave_Guardadas;
    static public boolean Tipo_Documento_Guardado;
    /** Creates new form GUICatalogacion */
    public GUICatalogacion() {
        Informacion_Basica_Guardada=false;
        Autores_Guardado=false;
        Areas_Guardadas=false;
        Palabras_Clave_Guardadas=false;
        Tipo_Documento_Guardado=false;
        documento= new Documento();
        initComponents();
    }
    
    public void catalogar(String path){
        if(Informacion_Basica_Guardada && Autores_Guardado && Areas_Guardadas
                && Palabras_Clave_Guardadas && Tipo_Documento_Guardado){
            ControladorDocumento controladorDocumento = new ControladorDocumento();
            controladorDocumento.insertarDocumento(documento.getTituloPrincipal(), documento.getTituloSecundario(), documento.getEditorial(), documento.getDerechosAutor(), documento.getIdioma(), documento.getDescripcion(), documento.getTipoMaterial(), documento.getFechaPublicacion(), biblioteca.Main.BibliotecaDigital.LOGGED_USER);
            String id=controladorDocumento.obtenerId(documento.getTituloPrincipal(), documento.getTituloSecundario(), documento.getEditorial(), documento.getDerechosAutor(), documento.getIdioma(), documento.getDescripcion(), documento.getTipoMaterial(), documento.getFechaPublicacion(), biblioteca.Main.BibliotecaDigital.LOGGED_USER);
            StringTokenizer stk=new StringTokenizer(path, ".");
            while(stk.countTokens()>1){
                stk.nextToken();
            }
            String newname="repository/"+id+"."+stk.nextToken();
            try{
            //guardar archivo
            FileInputStream fileInput = new FileInputStream(path);
            BufferedInputStream bufferedInput = new BufferedInputStream(fileInput);
            /// Se abre el fichero donde se hará la copia
            File newFile = new File(newname);
            if(!newFile.exists()){
                newFile.mkdir();
                newFile.createNewFile();
            }
            FileOutputStream fileOutput = new FileOutputStream (newname);
            BufferedOutputStream bufferedOutput = new BufferedOutputStream(fileOutput);
            // Bucle para leer de un fichero y escribir en el otro.
            byte [] array = new byte[1000];
            int leidos = bufferedInput.read(array);
            while (leidos > 0){
                bufferedOutput.write(array,0,leidos);
                leidos=bufferedInput.read(array);
            }
            // Cierre de los ficheros
            bufferedInput.close();
            bufferedOutput.close();
            }
            catch(IOException ioe){
                System.err.println(ioe);
            }
            controladorDocumento.insertarUbicacion(id, newname);
            //RELACIONES CON OTRAS TABLAS.

            //autores
            controladorDocumento.insertarAutores(id, biblioteca.gui.catalogacion.Autores.autoresSeleccionados);
            controladorDocumento.insertarAreas(id, biblioteca.gui.catalogacion.Selecc_Areas.areasSeleccionadas);
            controladorDocumento.insertarPalabrasClave(id, biblioteca.gui.catalogacion.Selecc_Pal_Clave.palabrasClaveSeleccionadas);
            JOptionPane.showMessageDialog(this, "El documento "+documento.getTituloPrincipal()+ " ha sido agregado", "Notificación", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
        else{
            JOptionPane.showMessageDialog(this, "No se puede guardar el documento por que no están completos todos los pasos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        biblioteca.gui.catalogacion.Informacion_Basica informacionBasica = new biblioteca.gui.catalogacion.Informacion_Basica(documento);
        biblioteca.gui.catalogacion.Autores autores = new biblioteca.gui.catalogacion.Autores(documento);
        biblioteca.gui.catalogacion.Selecc_Areas areas = new biblioteca.gui.catalogacion.Selecc_Areas(documento);
        biblioteca.gui.catalogacion.Selecc_Pal_Clave pc = new biblioteca.gui.catalogacion.Selecc_Pal_Clave(documento);
        biblioteca.gui.catalogacion.Subir_Archivo sa = new biblioteca.gui.catalogacion.Subir_Archivo(documento, this);
        biblioteca.gui.catalogacion.Tipo_Documento td = new biblioteca.gui.catalogacion.Tipo_Documento(documento);
        jTabbedPane1.add("Información Basica", informacionBasica);
        jTabbedPane1.add("Autores", autores);
        jTabbedPane1.add("Areas de la Computación", areas);
        jTabbedPane1.add("Palabras Clave", pc);
        jTabbedPane1.add("Tipo de Documento", td);
        jTabbedPane1.add("Subir Archivo", sa);
        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
	    // Set System L&F
        UIManager.setLookAndFeel(
            UIManager.getSystemLookAndFeelClassName());
    } 
    catch (UnsupportedLookAndFeelException e) {
       // handle exception
    }
    catch (ClassNotFoundException e) {
       // handle exception
    }
    catch (InstantiationException e) {
       // handle exception
    }
    catch (IllegalAccessException e) {
       // handle exception
    }
                new GUICatalogacion().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
